Question 1750:
I work for a company that supports several languages: COBOL, VB6, C#, and Java. I use those languages for my primary work, but I often find myself coding some minor programs (e.g. scripts) in Python because I find it to be the best tool for that type of task.
For example: an analyst gives me a complex CSV file to populate some DB tables, so I use Python to parse it and create a DB script.
What's the problem?
The main problem I see is that a few parts of these quick and dirty scripts are slowly gaining importance and:

My company does not support Python
They're not version controlled (I back them up in another way)
My coworkers do not know Python

The analysts have even started to reference them in emails ("launch the script that exports..."), so they are needed more often than I initially thought.
I should add that these scripts are just utilities that are not part of the main project; they simply help to get trivial tasks done in less time. For my own small tasks they help a lot.
In short, if I were a lottery winner to be in a accident, my coworkers would need to keep the project alive without those scripts; they would spend more time fixing CSV errors by hand, for example.
Is this a common scenario? Am I doing something wrong? What should I do?


TF-IDF Scores:
add: 0.1164
best: 0.0852
cobol: 0.1284
coding: 0.0882
common: 0.0942
company: 0.1941
complex: 0.1164
create: 0.1082
emails: 0.1284
errors: 0.1106
example: 0.1633
file: 0.1039
fixing: 0.1341
gives: 0.1341
hand: 0.1237
help: 0.1809
importance: 0.1341
initially: 0.1284
java: 0.0916
know: 0.0710
languages: 0.1743
lot: 0.0852
main: 0.2213
need: 0.0764
needed: 0.1164
parse: 0.1341
primary: 0.1341
problem: 0.1685
programs: 0.1133
project: 0.1529
python: 0.4328
short: 0.1198
simply: 0.1164
slowly: 0.1284
small: 0.0986
spend: 0.1133
started: 0.1082
support: 0.1164
task: 0.1039
tasks: 0.2164
thought: 0.1237
time: 0.1378
tool: 0.1106
trivial: 0.1237
type: 0.1060
use: 0.1216
version: 0.1284
way: 0.0751
work: 0.1398
wrong: 0.1082

Termine con il punteggio TF-IDF più alto: python (0.4328)

Best Answer:
You need to get the situation formalised as it shouldn't really have got to this point. However, these things happen so you need to explain to your boss that you created these scripts for personal use, but they've "escaped" into wider circulation. Admit (if necessary) that you were at fault for not bringing this to his attention sooner.
At the very least the scripts should be put under source control "just in case" - then at least if you aren't available (for what ever reason) your co-workers will have access to the scripts.
Then you either need to convince your boss that Python is the way to go for these or accept that you are going to have to re-write them in a supported language. If the cost of documenting the scripts and educating your co-workers in Python is lower than that of the re-write you might even win the argument.


TF-IDF Scores:
accept: 0.1779
access: 0.1499
attention: 0.1858
available: 0.1570
boss: 0.3716
case: 0.1468
control: 0.1714
convince: 0.1858
cost: 0.1612
created: 0.1858
explain: 0.1305
going: 0.1324
got: 0.1533
happen: 0.1533
language: 0.0991
lower: 0.1858
necessary: 0.1714
need: 0.3177
personal: 0.1499
point: 0.1324
python: 0.2998
really: 0.1068
reason: 0.1389
situation: 0.1570
source: 0.1413
things: 0.1015
use: 0.0842
way: 0.1041
wider: 0.1858
win: 0.1714
write: 0.2218

Termine con il punteggio TF-IDF più alto: boss (0.3716)

----------------------------------------------------------------------------------------------------

