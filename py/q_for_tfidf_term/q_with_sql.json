[
    {
        "ID": "4662",
        "Question": "I want to know about Which language is best for long term career and How? Which language should I choose among Java and .NET Platform or Should I choose Oracle like DBMS Language (SQL/PLSQL)? I am confused? Detailed answer would be appreciated. ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "answer": 0.17583191063505005,
                    "appreciated": 0.28674957243326143,
                    "best": 0.15678000564541597,
                    "career": 0.20988252370710123,
                    "choose": 0.4511438759202262,
                    "detailed": 0.25364473645861896,
                    "java": 0.18076000860837893,
                    "know": 0.1296948975271229,
                    "language": 0.41999153511941295,
                    "like": 0.10601598418349688,
                    "long": 0.16498760531156684,
                    "net": 0.18180972520859542,
                    "oracle": 0.2706795969420995,
                    "platform": 0.237574760967457,
                    "sql": 0.22053990048397648,
                    "term": 0.2342796488209284,
                    "want": 0.1404414623461444
                },
                "Max term": "choose",
                "Max score": 0.4511438759202262
            }
        ],
        "Best answer": "All of them. Both are solid technologies and they will stay in mainstream for long long time. Anyway the most characteristic of our career is change (evolution, new technologies introduction). You need learn new things forever. Technologies knowledge are not important to stay relevant on career, fundamentals, hard work, motivation and evolution is the key. ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "career": 0.3026782560018555,
                    "change": 0.1326624347470434,
                    "forever": 0.21445000545967535,
                    "fundamentals": 0.21445000545967535,
                    "hard": 0.14177798004995198,
                    "important": 0.13691948164048887,
                    "introduction": 0.20676533462714586,
                    "key": 0.16462066448290136,
                    "knowledge": 0.13430266085585277,
                    "learn": 0.11637637175341536,
                    "long": 0.23793386774459632,
                    "mainstream": 0.18289456673030155,
                    "need": 0.10094718951992544,
                    "new": 0.20318182730810924,
                    "relevant": 0.16079024953733317,
                    "solid": 0.19517782350486346,
                    "stay": 0.3378621252944584,
                    "technologies": 0.559568991880592,
                    "things": 0.10191734489872874,
                    "time": 0.08452276459463205,
                    "work": 0.0908015978451749
                },
                "Max term": "technologies",
                "Max score": 0.559568991880592
            }
        ]
    },
    {
        "ID": "7008",
        "Question": "What different types of security do there exist? Why and when should they be implemented? Example: SQL Injection Prevention ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "different": 0.23368009703104017,
                    "example": 0.23174273384565425,
                    "exist": 0.3333719361496091,
                    "implemented": 0.34691249111113764,
                    "injection": 0.4060035436360513,
                    "prevention": 0.43428091942133923,
                    "security": 0.3186351153258498,
                    "sql": 0.32203777015176605,
                    "types": 0.3186351153258498
                },
                "Max term": "prevention",
                "Max score": 0.43428091942133923
            }
        ],
        "Best answer": "Preventing Buffer overflow  a buffer overflow, or buffer overrun, is an anomaly where a program, while writing data to a buffer, overruns the buffer's boundary and overwrites adjacent memory. This is a special case of violation of memory safety. Buffer overflows can be triggered by inputs that are designed to execute code, or alter the way the program operates. This may result in erratic program behavior, including memory access errors, incorrect results, a crash, or a breach of system security. Thus, they are the basis of many software vulnerabilities and can be maliciously exploited...  I cannot count exploits that are based on this. ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "access": 0.1368869539761684,
                    "based": 0.12712264445018212,
                    "basis": 0.1861413286567848,
                    "behavior": 0.16980812883424537,
                    "case": 0.12975213527647905,
                    "code": 0.06969278134076047,
                    "count": 0.1861413286567848,
                    "crash": 0.1861413286567848,
                    "data": 0.12171657757454264,
                    "designed": 0.16141926234346773,
                    "errors": 0.14764535766577774,
                    "execute": 0.191970900002713,
                    "including": 0.1528417574290918,
                    "inputs": 0.191970900002713,
                    "memory": 0.5002820091075528,
                    "overflow": 0.3136874775772556,
                    "program": 0.36514973272362794,
                    "result": 0.16397855748831716,
                    "results": 0.15904972514463603,
                    "security": 0.1460853350990185,
                    "software": 0.09402167087994995,
                    "special": 0.16397855748831716,
                    "violation": 0.19910571870240235,
                    "way": 0.08755111652522639,
                    "writing": 0.11095817388493329
                },
                "Max term": "memory",
                "Max score": 0.5002820091075528
            }
        ]
    },
    {
        "ID": "7181",
        "Question": "I have been using mysql for the same amount of time I have been using PHP. However I feel about 10x more confident in PHP; or any other programming language. But I just can't seem to really really grasp SQL. I mean, I can select, update, insert, delete, join, etc. but when it comes to more complex stuff I am lost. How to write a more complicated select statement, how to use indexes properly, which engine to use, etc. For some reason I really find the mysql docs hard to follow, but the php ones easy to follow. I am starting to think that maybe my brain is just wired in a way that makes programming make since but sql confusing. I don't know. Most people think Regex is so confusing but to me it makes more scientific sense than how to construct an sql statement. Please don't get me wrong, I am not hating on SQL, I really like it, I just want to understand it better. Whats the best/fastest way to really master MySQL?  When I say \"master\" I don't mean the guru among gurus, I mean smart enough to figure out most of the questions I ask on SO myself without needing help.  ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "10x": 0.11069401649977274,
                    "ask": 0.07102224252082771,
                    "best": 0.06052182880163589,
                    "better": 0.057404589387107685,
                    "brain": 0.1073325764755625,
                    "comes": 0.08813142001454935,
                    "complex": 0.0842355403532361,
                    "complicated": 0.09043903742238564,
                    "confident": 0.09985706635606627,
                    "confusing": 0.214665152951125,
                    "construct": 0.11480808659505874,
                    "delete": 0.11480808659505874,
                    "easy": 0.07330129775952676,
                    "engine": 0.09455310751767164,
                    "fastest": 0.1073325764755625,
                    "feel": 0.06899416960188991,
                    "figure": 0.0870775973981754,
                    "follow": 0.1667557131412562,
                    "grasp": 0.11480808659505874,
                    "guru": 0.11480808659505874,
                    "gurus": 0.11480808659505874,
                    "hard": 0.07590234645113188,
                    "help": 0.06230332583692668,
                    "insert": 0.11480808659505874,
                    "join": 0.1044905194306232,
                    "know": 0.05006615704769716,
                    "language": 0.05404314936289745,
                    "like": 0.040925379601669504,
                    "lost": 0.09171105047273231,
                    "make": 0.05210063054871304,
                    "makes": 0.12915070161610248,
                    "master": 0.18910621503534328,
                    "maybe": 0.07705502655095393,
                    "mean": 0.2294090391641584,
                    "mysql": 0.33208204949931824,
                    "ones": 0.07960208727867918,
                    "people": 0.05134800047763728,
                    "php": 0.24306302546611505,
                    "programming": 0.09747838104900562,
                    "properly": 0.1044905194306232,
                    "questions": 0.07379297693720521,
                    "really": 0.26768998929909055,
                    "reason": 0.07145607139534522,
                    "say": 0.05980805412216112,
                    "scientific": 0.11480808659505874,
                    "select": 0.20405723527433575,
                    "sense": 0.08255830491431379,
                    "smart": 0.09985706635606627,
                    "sql": 0.34054031433596404,
                    "starting": 0.08513507858399101,
                    "statement": 0.20405723527433575,
                    "stuff": 0.07235560962610013,
                    "think": 0.09747838104900562,
                    "time": 0.04525015915030591,
                    "understand": 0.06284562600558803,
                    "update": 0.0870775973981754,
                    "use": 0.08648834852286784,
                    "using": 0.10774644606214036,
                    "want": 0.05421465642748092,
                    "way": 0.10096722718995403,
                    "write": 0.056602859749088553,
                    "wrong": 0.07429812844028454
                },
                "Max term": "sql",
                "Max score": 0.34054031433596404
            }
        ],
        "Best answer": "Fastest way I found to \"master\" anything was to challenge myself with it. Take a set of data and write down eight to ten different things you would like to query for. A group of students you might want to find the average age of everyone grouped by the grade point average rounded to the nearest whole number. Then write the queries for them. Start with one table, then add more. Practice data joins and built in functions.  ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "add": 0.16311436563436085,
                    "age": 0.22119134279267802,
                    "average": 0.3882781043395899,
                    "built": 0.19413905216979496,
                    "challenge": 0.22720756720699825,
                    "data": 0.29713903601134206,
                    "different": 0.13077197769168297,
                    "fastest": 0.22720756720699825,
                    "functions": 0.19144638420155122,
                    "group": 0.19703135333814925,
                    "like": 0.08663311961429843,
                    "master": 0.2001552765841152,
                    "number": 0.15220267016962344,
                    "point": 0.1393436881912645,
                    "practice": 0.17649888386551157,
                    "queries": 0.23432325039743143,
                    "query": 0.20727095977454837,
                    "set": 0.15316637852878226,
                    "start": 0.13543761040091762,
                    "students": 0.21597985215711238,
                    "table": 0.22119134279267802,
                    "things": 0.11550100296846771,
                    "want": 0.11476459988506613,
                    "way": 0.1068665209145,
                    "write": 0.23964016299333757
                },
                "Max term": "average",
                "Max score": 0.3882781043395899
            }
        ]
    },
    {
        "ID": "8588",
        "Question": "SQL is officially pronounced as /ˌɛskjuːˈɛl/ like \"S-Q-L\", as stated in   Beaulieu, Alan (April 2009). Mary E. Treseler. ed. Learning SQL (2nd ed.). Sebastapol, CA, USA: O'Reilly. ISBN 978-0-596-52083-0.  But often it is pronounced  /ˈsiːkwəl/ like \"sequel\", what is the history behind this second pronunciation? ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "2009": 0.31604502498699294,
                    "ed": 0.6094395307531758,
                    "history": 0.25622445770618485,
                    "learning": 0.19434405570930627,
                    "like": 0.22531971400991002,
                    "second": 0.23436082628264168,
                    "sequel": 0.31604502498699294,
                    "sql": 0.46872165256528336
                },
                "Max term": "ed",
                "Max score": 0.6094395307531758
            }
        ],
        "Best answer": "SEQUEL = Structured English QUEry Language.  For a good historical perspective read   Don Chamberlin: ...A bunch of things were happening at about this time that I think we ought to mention just in passing. One was that we had to change the name of our language from SEQUEL to SQL. And the reason that we had to do that was because of a legal challenge that came from a lawyer. Mike, you probably can help me out with this. I believe it was from the Hawker Siddeley Aircraft Company in Great Britain, that said SEQUEL was their registered trademark. We never found out what kind of an aircraft a SEQUEL was, but they said we couldn't use their name anymore, so we had to figure out what to do about that. I think I was the one who condensed all the vowels out of SEQUEL to turn it into SQL, based on the pattern of APL and languages that had three-lettered names that end in L. So that was how that happened. ...  ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "anymore": 0.1341888476442291,
                    "based": 0.09164241649800439,
                    "believe": 0.10223466804145001,
                    "bunch": 0.1306356639573882,
                    "came": 0.12755775624730686,
                    "challenge": 0.1341888476442291,
                    "change": 0.08879310637948508,
                    "company": 0.0848601765711191,
                    "end": 0.0799894875456745,
                    "english": 0.12484284923976177,
                    "figure": 0.10886575943837223,
                    "good": 0.06276614460530666,
                    "great": 0.08879310637948508,
                    "happened": 0.11821175784283953,
                    "happening": 0.1341888476442291,
                    "help": 0.0778925818515464,
                    "kind": 0.09633538630671164,
                    "language": 0.13513116286225169,
                    "languages": 0.07857057391229326,
                    "legal": 0.12755775624730686,
                    "mention": 0.12021737601874101,
                    "names": 0.1130682837612339,
                    "passing": 0.1435348460486964,
                    "pattern": 0.11465857415599866,
                    "perspective": 0.12484284923976177,
                    "probably": 0.08150150938230133,
                    "query": 0.12241428216570122,
                    "read": 0.08625757824006046,
                    "reason": 0.08933548595014182,
                    "said": 0.18208735952849958,
                    "sequel": 0.717674230243482,
                    "sql": 0.21287438472862333,
                    "structured": 0.12755775624730686,
                    "things": 0.06821492206714663,
                    "think": 0.12186898006840724,
                    "time": 0.056572449031632145,
                    "turn": 0.11821175784283953,
                    "use": 0.05406453568911812
                },
                "Max term": "sequel",
                "Max score": 0.717674230243482
            }
        ]
    }
]