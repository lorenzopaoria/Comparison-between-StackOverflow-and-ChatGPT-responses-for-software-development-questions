[
    {
        "ID": "18",
        "Question": "At first glance, I'd say a good programming team needs to understand the following matters:  The details of the core language / framework HTML, (asynchronous) javascript SQL / data model Usability / UI design Security Project management.  If this team is not complete: what is needed? ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "asynchronous": 0.2571869079221575,
                    "complete": 0.1849477987944835,
                    "core": 0.2234123036523379,
                    "data": 0.1630659137860042,
                    "design": 0.1529398907005491,
                    "details": 0.20476488360486428,
                    "following": 0.19181628633242892,
                    "framework": 0.17507301578675238,
                    "good": 0.11664477650436558,
                    "html": 0.20231642804444822,
                    "javascript": 0.21625632301877687,
                    "language": 0.12556406315825971,
                    "management": 0.17507301578675238,
                    "matters": 0.2667455543624896,
                    "model": 0.20000038776862575,
                    "needed": 0.1849477987944835,
                    "needs": 0.19181628633242892,
                    "programming": 0.11324082459011259,
                    "project": 0.12596254333832546,
                    "say": 0.1389582652694804,
                    "security": 0.1957131816663766,
                    "sql": 0.1978031722859337,
                    "team": 0.31883613494038604,
                    "ui": 0.2234123036523379,
                    "understand": 0.14601577158276388,
                    "usability": 0.24937692511252485
                },
                "Max term": "team",
                "Max score": 0.31883613494038604
            }
        ],
        "Best answer": "Customer (or an advocate of some sort).   Basically, someone that can say, \"Yes, you're building what I want and it's going to solve my problem.\" or that the team can go to when they have questions about how something is supposed to work.  That may or may not be the same person that is doing Project Management. Also, you're missing out on a QA person there.  You can't really depend on the developers to adequately test - they're usually too close to the code and the normal response for developers is to test happy path stuff, not doing weird crap like copy pasting War & Peace into a textbox and seeing what the application does. ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "adequately": 0.2044257296929528,
                    "advocate": 0.1971002719993395,
                    "application": 0.11720850917400231,
                    "basically": 0.16103452958857312,
                    "building": 0.171216436223895,
                    "close": 0.174345322027743,
                    "code": 0.07155493962085009,
                    "copy": 0.1683599872821864,
                    "customer": 0.14998866642144346,
                    "depend": 0.2044257296929528,
                    "developers": 0.23327513031490965,
                    "going": 0.10567265999308026,
                    "happy": 0.171216436223895,
                    "like": 0.07287117864389571,
                    "management": 0.13417066720113816,
                    "missing": 0.174345322027743,
                    "normal": 0.171216436223895,
                    "path": 0.171216436223895,
                    "person": 0.27878503025810264,
                    "problem": 0.1064934140794627,
                    "project": 0.0965338856254183,
                    "qa": 0.18605440883220983,
                    "questions": 0.13139477892189408,
                    "really": 0.09532903651112767,
                    "response": 0.1816707797213563,
                    "say": 0.1064934140794627,
                    "seeing": 0.1683599872821864,
                    "solve": 0.14560503731058994,
                    "sort": 0.14998866642144346,
                    "stuff": 0.12883542208455,
                    "supposed": 0.16329945886061334,
                    "team": 0.12217318802827387,
                    "test": 0.23104925929076026,
                    "usually": 0.13321905119540353,
                    "want": 0.0965338856254183,
                    "war": 0.1971002719993395,
                    "weird": 0.1911149372537829,
                    "work": 0.08655715749224505,
                    "yes": 0.13321905119540353
                },
                "Max term": "person",
                "Max score": 0.27878503025810264
            }
        ]
    },
    {
        "ID": "1674",
        "Question": "i wonder apart from those very simple hello world apps, what other programs should i try developing for learning. i am entering uni next year and wonder what kind of programs will be developed in that environment.  this is not really a language specific thing, but if you want to know what i use currently mainly  windows: C#/WPF - i studied java/vb etc in poly but i think C# is the way to go, maybe even F# web: PHP/MySQL, Zend Framework/Doctrine, + HTML/CSS/JS(jQuery) of course. looking to try google app engine with python too.   for now, i am thinking of   todo lists apps that integrate with api eg. twitter/tumblr which i use text editor - i am currently trying to develop a text editor that uses markdown and generates html files for viewing (link to blog entry). not very pratical after i started developing it. cos when editing theres no formatting and in HTML format, i cannot edit directly  blog software (for web)  ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "apart": 0.11388998810690712,
                    "api": 0.12356278576171097,
                    "app": 0.0835154457944696,
                    "apps": 0.20190611487190077,
                    "blog": 0.2077962204738056,
                    "course": 0.09044013245384565,
                    "css": 0.11663809910233491,
                    "currently": 0.19006497023986305,
                    "develop": 0.09503248511993152,
                    "developed": 0.1073361270048764,
                    "developing": 0.1843122955611301,
                    "directly": 0.11663809910233491,
                    "edit": 0.08535968746512768,
                    "editing": 0.11981056042292598,
                    "editor": 0.2185952708816425,
                    "engine": 0.10554541010203626,
                    "entry": 0.12815513842779683,
                    "environment": 0.08411201688719948,
                    "files": 0.09128025978114655,
                    "format": 0.11146598241805512,
                    "formatting": 0.11981056042292598,
                    "framework": 0.08411201688719948,
                    "generates": 0.12356278576171097,
                    "google": 0.09215614778056505,
                    "hello": 0.12356278576171097,
                    "html": 0.2916024962914962,
                    "integrate": 0.12815513842779683,
                    "java": 0.07789099745967533,
                    "jquery": 0.10929763544082124,
                    "js": 0.12356278576171097,
                    "kind": 0.08601308398271028,
                    "know": 0.055886614586882204,
                    "language": 0.06032595345051512,
                    "learning": 0.07880582636309695,
                    "link": 0.10554541010203626,
                    "lists": 0.11146598241805512,
                    "looking": 0.07576743888232862,
                    "mainly": 0.12356278576171097,
                    "maybe": 0.08601308398271028,
                    "mysql": 0.12356278576171097,
                    "php": 0.09044013245384565,
                    "programs": 0.1777125081845891,
                    "python": 0.08668790711506066,
                    "really": 0.059762075393453865,
                    "simple": 0.07927895666280507,
                    "software": 0.060517399125248506,
                    "specific": 0.0835154457944696,
                    "started": 0.0835154457944696,
                    "studied": 0.12356278576171097,
                    "text": 0.20190611487190077,
                    "theres": 0.12815513842779683,
                    "thing": 0.07312045959716632,
                    "think": 0.05440538113449626,
                    "thinking": 0.0807673347990418,
                    "try": 0.14695677242459934,
                    "trying": 0.07927895666280507,
                    "twitter": 0.12356278576171097,
                    "use": 0.09654307990023335,
                    "uses": 0.10095305743595039,
                    "vb": 0.11388998810690712,
                    "want": 0.060517399125248506,
                    "way": 0.05635260268224119,
                    "web": 0.15153487776465724,
                    "windows": 0.09215614778056505,
                    "wonder": 0.20474589756289038,
                    "world": 0.07927895666280507,
                    "wpf": 0.11981056042292598,
                    "year": 0.09307097668398667
                },
                "Max term": "html",
                "Max score": 0.2916024962914962
            }
        ],
        "Best answer": "Have a look at Project Euler.  There's nothing else like it for sharpening your foundational programming skills. ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "euler": 0.6395679625279995,
                    "like": 0.2364586856199084,
                    "look": 0.3822137201522418,
                    "programming": 0.28160532759315166,
                    "project": 0.3132414781475625,
                    "skills": 0.4599249930903479
                },
                "Max term": "euler",
                "Max score": 0.6395679625279995
            }
        ]
    },
    {
        "ID": "4142",
        "Question": "Often when stating a new project I'll require a \"quick 'n' dirty\" content management solution. Ideally something that can read my database schema and generated HTML forms. Previously I've used; phpMyEdit and phpMyAdmin but they are lacking is key areas. My wish list woulds be:  Database independent Foreign key aware Handles views as-well-as tables Generates modern HTML and CSS AJAX interface.  What's your swiss army knife when it comes to CMS on a project? ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "areas": 0.1628851860206296,
                    "army": 0.19447854273112417,
                    "aware": 0.16586182282862058,
                    "cms": 0.19447854273112417,
                    "comes": 0.14928974640704332,
                    "content": 0.18181544244499875,
                    "css": 0.17700115515173492,
                    "database": 0.2884282198119467,
                    "dirty": 0.19447854273112417,
                    "foreign": 0.18181544244499875,
                    "forms": 0.1875095357512678,
                    "generates": 0.1875095357512678,
                    "html": 0.29500925847245224,
                    "ideally": 0.17283082980847694,
                    "interface": 0.14928974640704332,
                    "key": 0.29857949281408663,
                    "list": 0.13052694908672546,
                    "management": 0.1276420334843961,
                    "modern": 0.1553534422290877,
                    "new": 0.09212987800962828,
                    "previously": 0.19447854273112417,
                    "project": 0.18367325315460578,
                    "quick": 0.16915234215887334,
                    "read": 0.1168723036770571,
                    "require": 0.13602019894789144,
                    "solution": 0.13260979061022085,
                    "tables": 0.18181544244499875,
                    "used": 0.09490095005425898,
                    "views": 0.1875095357512678,
                    "wish": 0.19447854273112417
                },
                "Max term": "key",
                "Max score": 0.29857949281408663
            }
        ],
        "Best answer": "I think you're looking for \"scaffolding\", where the software generates views that allow users to maintain the data without you having to do much or any work.  If you must stick with PHP, then look at CakePHP. http://book.cakephp.org/view/105/Scaffolding But two quick suggestions for you. Look at this site: http://www.phpscaffold.com/ Second suggestion: Consider switching to Python/Django or Ruby on Rails.  Both of those are better than what PHP has to offer in terms of scaffolding.  There may be something in PHP somewhere that's as good, but I have not seen it.  CakePHP is the closest I know of. ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "allow": 0.14546317094445968,
                    "better": 0.09474774827904558,
                    "book": 0.12179720259749796,
                    "closest": 0.18949369388835843,
                    "com": 0.1473080107961262,
                    "consider": 0.12263096811986383,
                    "data": 0.1158405898251617,
                    "django": 0.18270331559365627,
                    "generates": 0.18270331559365627,
                    "good": 0.08286342250546791,
                    "http": 0.2874476193319599,
                    "know": 0.082635477335541,
                    "look": 0.21837151961514426,
                    "looking": 0.11203180806021239,
                    "maintain": 0.15606233100411113,
                    "offer": 0.15606233100411113,
                    "org": 0.17246428444592046,
                    "php": 0.4011817626201656,
                    "python": 0.12817911116329284,
                    "quick": 0.16481665121209604,
                    "rails": 0.16481665121209604,
                    "ruby": 0.15137144289980434,
                    "second": 0.14051763250142404,
                    "seen": 0.12921075361632128,
                    "site": 0.13626460141744104,
                    "software": 0.08948268204805837,
                    "stick": 0.16481665121209604,
                    "suggestion": 0.17715517255022725,
                    "suggestions": 0.16161047404754014,
                    "switching": 0.17715517255022725,
                    "terms": 0.14372380966597995,
                    "think": 0.08044528502763162,
                    "users": 0.12263096811986383,
                    "view": 0.15606233100411113,
                    "views": 0.18270331559365627,
                    "work": 0.08023469222938694,
                    "www": 0.16481665121209604
                },
                "Max term": "php",
                "Max score": 0.4011817626201656
            }
        ]
    },
    {
        "ID": "7245",
        "Question": "I had a question posed to me the other day by another programmer.  I remember (a very long time ago) wondering the very same.  Why was a browser-side include tag never considered?  Or was it? Specifically with a tag that instructed the browser to include additional HTML from other sources. e.g. <include src=\"http://server/foo/bar.html\">.  Many folks will make javascript calls and fill innerHTML to accomplish the same, when the same outside a the javascript engine could be accomplished by the browser. It would have been painful to have nested <HTML>s <BODY>s (i.e.) but we have to consider that aspect anywhere anyway. ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "accomplish": 0.1384000621614831,
                    "accomplished": 0.1455947909536171,
                    "additional": 0.13043575556179027,
                    "ago": 0.11310062607436956,
                    "aspect": 0.1501545264383927,
                    "bar": 0.13545439025833045,
                    "body": 0.1501545264383927,
                    "browser": 0.4252187685981863,
                    "calls": 0.12440446004530809,
                    "consider": 0.10078413128348905,
                    "considered": 0.11811926077090976,
                    "day": 0.09878231876666745,
                    "engine": 0.1282596614661964,
                    "folks": 0.1455947909536171,
                    "foo": 0.14173958953272878,
                    "html": 0.35435778231272924,
                    "http": 0.11811926077090976,
                    "include": 0.35435778231272924,
                    "javascript": 0.2525156978987496,
                    "long": 0.08639467369922102,
                    "make": 0.07067360779342327,
                    "nested": 0.1501545264383927,
                    "outside": 0.11954875299565004,
                    "programmer": 0.08050332989291575,
                    "question": 0.07989331659393345,
                    "remember": 0.10892271946195413,
                    "server": 0.11092453197877575,
                    "sources": 0.1455947909536171,
                    "specifically": 0.12106493267406239,
                    "src": 0.1557351916489038,
                    "tag": 0.2911895819072342,
                    "time": 0.06138106135565183,
                    "wondering": 0.12106493267406239
                },
                "Max term": "browser",
                "Max score": 0.4252187685981863
            }
        ],
        "Best answer": " Why was a browser-side include tag never considered? Or was it?  It was certainly requested by every newbie web author who hadn't worked out Server Side Includes yet, back in the early days on the www-html list. But in those days W3 were happy to completely ignore web author pressure. If cross-site inclusion were allowed it would be a security disaster. You could pull in a page from the user's bank and read content from it. (Originally, DOM scripting was limited, but you could still have read from document.links, document.images, scripting functions dropped by the target page, etc. Since then you can do what you like with imported content.) If cross-site inclusion weren't allowed... well then the feature wouldn't have any advantage over server-side includes. It'd be more, slower work for the client to do that the server could have dealt with better. Unlike <iframe>, an include would have to block page loading. SSIs would be in every way superior. ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "advantage": 0.10660891369614221,
                    "allowed": 0.2214215778276083,
                    "author": 0.2214215778276083,
                    "bank": 0.12728687417373882,
                    "better": 0.06364404253233501,
                    "block": 0.10660891369614221,
                    "browser": 0.11584786397517385,
                    "certainly": 0.0989498692554761,
                    "client": 0.08825424382470547,
                    "completely": 0.09438863025140103,
                    "considered": 0.09654228645467279,
                    "content": 0.237997663087543,
                    "cross": 0.2316957279503477,
                    "days": 0.17502171811382225,
                    "document": 0.21321782739228443,
                    "dropped": 0.12728687417373882,
                    "early": 0.09771065177413805,
                    "feature": 0.07971539033964607,
                    "functions": 0.10026909008056506,
                    "happy": 0.10660891369614221,
                    "html": 0.09654228645467279,
                    "ignore": 0.11071078891380415,
                    "include": 0.19308457290934558,
                    "includes": 0.24545127033932754,
                    "like": 0.045373664855541694,
                    "limited": 0.1085571327105324,
                    "links": 0.12272563516966377,
                    "list": 0.08543033648526559,
                    "loading": 0.12728687417373882,
                    "originally": 0.10660891369614221,
                    "page": 0.3008072702416952,
                    "pressure": 0.1189988315437715,
                    "pull": 0.1189988315437715,
                    "read": 0.15298664833275483,
                    "requested": 0.12272563516966377,
                    "security": 0.09339131888607517,
                    "server": 0.2719854798765263,
                    "site": 0.1830635607871494,
                    "slower": 0.12728687417373882,
                    "superior": 0.1189988315437715,
                    "tag": 0.1189988315437715,
                    "unlike": 0.12272563516966377,
                    "user": 0.07692367328754329,
                    "way": 0.0559708079986071,
                    "web": 0.15050821337007872,
                    "work": 0.053895319493785336,
                    "worked": 0.0835421493150067,
                    "www": 0.11071078891380415
                },
                "Max term": "page",
                "Max score": 0.3008072702416952
            }
        ]
    }
]