[
    {
        "ID": "1516",
        "Question": "A few years ago I considered myself somewhat of a web developer, knowing the basic 3 languages (HTML, CSS, JS) and lots of PHP. Moving on from simple text to actual websites was a pain because of the so called \"standards\" out there, which at the time were ridiculously complicated for me. It pretty much boiled down to this (minus the IE related stuff):  Standards are there to replace old ways of doing things in a simpler way. However when trying to actually implement some of the stuff (Entirely CSS based layout for example), it took me 10x longer to actually do it then if I did the simpler and still working solution. If it rendered the same, then why should I use the more complicated example that takes 10x longer and breaks once you change browsers? This sparked many long religious debates in ##php, ##css, and ##js in Freenode IRC and actually got me banned from ##css because I messed with their little world over there. My question: Should I follow every single standard and coding conventions even if they take me 10x longer but get me the same result as the simple one?  For the poll tag, those of you who have websites of any size (huge or small), do you follow all the standards?  ",
        "ChatGpt answer": "In my opinion, it's important to consider the benefits of following standards and coding conventions, but it's also important to prioritize efficiency and practicality. If a standard or convention seems unnecessarily complicated and time-consuming for no added benefit, it may be worth considering alternatives. Ultimately, the goal should be to create a functional and user-friendly website, regardless of whether every single standard is followed.  As for the poll, I try to follow standards and coding conventions whenever possible, but I also value efficiency and practicality. It's important to strike a balance and prioritize what works best for the specific project at hand.",
        "Stack Overflow best answer": "The standards writers have thought of things that haven't occurred to you, such as accessibility concerns. Standards exist for a reason. And, with HTML5, standards are fairly easy to follow. There may, occasionally, be reason to not follow the standard, but following it should be your default behaviour. ",
        "Are the two answers equivalent?": "No"
    },
    {
        "ID": "15842",
        "Question": "I am thinking about creating a silverlight application, and I lack the skills to create a good looking UI. Today's graphic designers usually know HTML and CSS and thus save me the trouble of doing something I am not very good with. Is this the same case with XAML? Do I have to hire two employees for this job? ",
        "ChatGpt answer": "Not necessarily! Many graphic designers are familiar with XAML and have experience creating UI designs for Silverlight applications. Hiring a designer who is proficient in both graphic design and XAML can save you time and effort in creating a visually appealing UI for your application. Additionally, there are tools available that can help bridge the gap between design and development, such as Adobe XD, which allows designers to create interactive prototypes that can be easily translated into XAML for implementation in a Silverlight application. It may be beneficial to look for a designer who is comfortable working with both graphic design and XAML to ensure a seamless and efficient development process.",
        "Stack Overflow best answer": "Silverlight is a pretty cool technology, but I'm seriously concerned about its future. However, if you want a cool UI done in XAML... you have several options.   Hire a Silverlight/WPF dev and hope they also design / See #3 Hire a UX designer with XAML skillz Hire a great graphic designer and then hire #1 OR you can use the built-in Ai/PSD to XAML tools in Expression Studio (design).  Tons of options, if you are a small company you may even qualify for Bizspark ( a free version of Expression Studio).  Good luck. ",
        "Are the two answers equivalent?": "No"
    }
]