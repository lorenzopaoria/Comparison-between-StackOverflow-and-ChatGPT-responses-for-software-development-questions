[
    {
        "ID": "262",
        "Question": "Will Java have the same importance it had in the past, or it will be less relevant than nowadays? ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "importance": 0.6039211659258445,
                    "java": 0.41259165581484764,
                    "past": 0.4872007282549792,
                    "relevant": 0.47716119004645485
                },
                "Max term": "importance",
                "Max score": 0.6039211659258445
            }
        ],
        "Best answer": "Java is relevant and will continue to be relevant for many years in the Enterprise computing world.   Whether it continues to be relevant in other areas depends a lot on what Oracle does.  If they inject some life (and resources) into ME, desktop applications and other areas, and if they press on with the evolution of the Java language, then Java will do well.   But if Oracle cuts back on R&D and/or tries to stomp other players in the Java space, there's a good chance that someone / some company will develop a better (and more open) Java-like language.  If Oracle win their lawsuit against Google, I predict that the next generation of the Android platform will have a new language, just like happened with C#.  If Google get the openness right ... then, the game is on! ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "android": 0.15183627977634553,
                    "applications": 0.11996661822447813,
                    "areas": 0.28014827186760716,
                    "better": 0.09753714032085768,
                    "chance": 0.14007413593380358,
                    "company": 0.1098625837283455,
                    "computing": 0.1453631049072685,
                    "depends": 0.13172876206702008,
                    "desktop": 0.13172876206702008,
                    "develop": 0.13560237638336117,
                    "enterprise": 0.1453631049072685,
                    "game": 0.12525558719794305,
                    "good": 0.08294260054433546,
                    "google": 0.26345752413404017,
                    "happened": 0.14007413593380358,
                    "java": 0.5186635741574689,
                    "language": 0.24295858603507112,
                    "life": 0.13172876206702008,
                    "like": 0.1263487468812351,
                    "lot": 0.09644233053939422,
                    "new": 0.08730213938970724,
                    "open": 0.11549485867403574,
                    "platform": 0.1453631049072685,
                    "relevant": 0.3598998546734344,
                    "resources": 0.1453631049072685,
                    "right": 0.1098625837283455,
                    "space": 0.13560237638336117,
                    "win": 0.14007413593380358,
                    "world": 0.10514806948861759,
                    "years": 0.10663603749049871
                },
                "Max term": "java",
                "Max score": 0.5186635741574689
            }
        ]
    },
    {
        "ID": "368",
        "Question": "For a long time in SO and in other places Java has the reputation of being slow. From jokes to many comments in questions and answers, people still believe Java is slow based solely on experience with it in the 90s. This is my issue: we have disproved (most) of the reasons that people believe Java is slow. Outside of small things, Java is pretty fast. So why is it that people still refuse to believe Java is fast now? Is it part of their mindset that anything thats not C/C++ is slow? Is it because people don't check over time? Is it because people are just biased? ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "answers": 0.11810223326840688,
                    "based": 0.10547504301599449,
                    "believe": 0.36472543815214903,
                    "check": 0.1075568107347791,
                    "comments": 0.11229866845553807,
                    "experience": 0.09063619132046265,
                    "fast": 0.23620446653681376,
                    "issue": 0.10547504301599449,
                    "java": 0.46501102311889925,
                    "long": 0.08846758474936049,
                    "outside": 0.12558432962808785,
                    "people": 0.3522003292802588,
                    "places": 0.12157514605071634,
                    "pretty": 0.09849797635199517,
                    "questions": 0.10007471437509814,
                    "reasons": 0.11229866845553807,
                    "slow": 0.5445190086468625,
                    "small": 0.10007471437509814,
                    "things": 0.07436269956284569,
                    "time": 0.1398500698501173
                },
                "Max term": "slow",
                "Max score": 0.5445190086468625
            }
        ],
        "Best answer": "It's the applications. As you note, we have proved, time and time again, that in contrived scenarios Java code can meet or even beat the performance of so-called \"performant\" languages like C, C++, Lisp, VB6, or JavaScript. And when presented with such evidence, most sane, open-minded opponents will hang their heads in shame and promise never again to spread such slander. ...but then, they fire up Eclipse, or NetBeans, or Guiffy, or enable the Java support in their browser, or try to run an app on their favorite feature phone. And they wait for it to become responsive... ...and wait...   ...and wait...     ...and wait...         ...and wait...             ...and...      ...what did I promise never to do again? Sorry, must have dozed off... ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "app": 0.12218593309813698,
                    "applications": 0.11966809953849387,
                    "called": 0.14500139092624828,
                    "code": 0.06267872728678141,
                    "evidence": 0.139725582747774,
                    "favorite": 0.15145845828404708,
                    "feature": 0.11520746728166693,
                    "hang": 0.15145845828404708,
                    "java": 0.20694918349078767,
                    "javascript": 0.13140097507476697,
                    "languages": 0.09842935714988925,
                    "like": 0.06301717361931324,
                    "lisp": 0.14500139092624828,
                    "meet": 0.15145845828404708,
                    "note": 0.139725582747774,
                    "open": 0.11520746728166693,
                    "performance": 0.13526495049094703,
                    "promise": 0.29000278185249656,
                    "run": 0.12799270721150088,
                    "scenarios": 0.14500139092624828,
                    "support": 0.13140097507476697,
                    "time": 0.1555976973002381,
                    "try": 0.09842935714988925,
                    "wait": 0.7250069546312413
                },
                "Max term": "wait",
                "Max score": 0.7250069546312413
            }
        ]
    },
    {
        "ID": "1189",
        "Question": "By now I work with asp.net and C#. I have done a decent work in Java as well. I am planning my career in such a way I should be language-agnostic someday. What are the things that I need to learn?  First would OOP paradigms as its speaks about the Class design. Are there any others? ",
        "TF-IDF scores": [
            {
                "Scores": {
                    "agnostic": 0.30415681642502773,
                    "asp": 0.30415681642502773,
                    "career": 0.24166069203160434,
                    "class": 0.25629881331244087,
                    "design": 0.20408607880327326,
                    "java": 0.2170496586626967,
                    "language": 0.16945498905125633,
                    "learn": 0.2089445332302954,
                    "need": 0.18105171269835554,
                    "net": 0.23355556659920304,
                    "oop": 0.30415681642502773,
                    "paradigms": 0.30415681642502773,
                    "planning": 0.2930902121022454,
                    "things": 0.1735485585814314,
                    "way": 0.1779382981171027,
                    "work": 0.3312402771841113
                },
                "Max term": "work",
                "Max score": 0.3312402771841113
            }
        ],
        "Best answer": "To be language agnostic you need to have experience in all of the common styles and types of languages.  An imperative language (You tell it what to do, step by step. Eg - C) A declarative language (You tell it your goal, it figures out what to do. Eg - SQL/HTML/Prolog)  Also:  A functional language (Functions are key, avoiding state and side effects are the goals. Eg - Haskell/OCaml/Lisp/F#) An object oriented language (Architecture where objects encapsulate related data and the methods that act on them). Eg - Java/C#)  Some typing styles:  A statically typed language (Data types are defined and checked at compile time. Eg - C#) A dynamically typed language (Data types are checked at runtime. Eg - Python/Javascript) Experience of strong vs. weak typing is also useful.  Some different runtime styles:  Something compiled (Eg - C++) Something interpreted (Eg - PHP) Something Managed (Eg - C#/Java)  Lower level stuff:  Something fairly low level (Eg - C) Some dialect of assembly (Eg - NASM)  On top of that I would say you need experience of some concurrent programming and something event driven. You should probably also make sure you know something about the various domains such as web programming (client & server), rich client development/desktop, games. You might also want to learn about embedded programming, or dedicated hardware (like games consoles), and mobile development is becoming an increasingly relevant domain. Others have also mentioned that it's worth getting some experience of Generic programming and Meta programming approaches. When you learn these paradigms avoid just learning the syntax and writing in your old style. I've seen many C# devs write JavaScript as if it's statically typed. Don't do this, try to learn the language paradigms and embrace them. If you've done all of this, the differences between languages will become largely syntactical so switching will become a fairly simple exercise of learning some new syntax. Don't forget though that modern programming is almost always dependant on a framework, so familiarising yourself with the common and popular frameworks for each language you learn is also critical. Knowing C# is irrelevant without .net.  ",
        "Best answer TF-IDF scores": [
            {
                "Scores": {
                    "agnostic": 0.0723986267780601,
                    "approaches": 0.06976443641046373,
                    "architecture": 0.0756226152290112,
                    "assembly": 0.0756226152290112,
                    "avoid": 0.06100695801187457,
                    "client": 0.13952887282092746,
                    "common": 0.10622093803363451,
                    "compile": 0.0723986267780601,
                    "concurrent": 0.0756226152290112,
                    "critical": 0.0756226152290112,
                    "data": 0.15710814331180345,
                    "defined": 0.0756226152290112,
                    "desktop": 0.0656079923919484,
                    "development": 0.08940567870088545,
                    "different": 0.052369381103934486,
                    "domain": 0.0723986267780601,
                    "driven": 0.06390625759191627,
                    "dynamically": 0.0756226152290112,
                    "effects": 0.06976443641046373,
                    "event": 0.0723986267780601,
                    "exercise": 0.06753726018895805,
                    "experience": 0.20140037613255898,
                    "fairly": 0.13952887282092746,
                    "framework": 0.057522637351895244,
                    "frameworks": 0.06390625759191627,
                    "functional": 0.06100695801187457,
                    "functions": 0.06976443641046373,
                    "games": 0.1350745203779161,
                    "getting": 0.05859335279466677,
                    "goal": 0.06976443641046373,
                    "hardware": 0.06976443641046373,
                    "haskell": 0.0656079923919484,
                    "html": 0.06976443641046373,
                    "imperative": 0.0756226152290112,
                    "interpreted": 0.0756226152290112,
                    "irrelevant": 0.0723986267780601,
                    "java": 0.10332891706669557,
                    "javascript": 0.1312159847838968,
                    "key": 0.0723986267780601,
                    "know": 0.040024748538631465,
                    "knowing": 0.0723986267780601,
                    "language": 0.36301924076469244,
                    "languages": 0.09829078530596676,
                    "learn": 0.19894076294535248,
                    "learning": 0.10622093803363451,
                    "level": 0.11718670558933354,
                    "like": 0.03146422806242882,
                    "lisp": 0.0723986267780601,
                    "low": 0.0656079923919484,
                    "lower": 0.0756226152290112,
                    "make": 0.04235475826687168,
                    "managed": 0.06976443641046373,
                    "mentioned": 0.0723986267780601,
                    "methods": 0.06238400394099729,
                    "mobile": 0.0723986267780601,
                    "modern": 0.0756226152290112,
                    "need": 0.0861916923595089,
                    "net": 0.055593369554885586,
                    "new": 0.04348115025909543,
                    "object": 0.0723986267780601,
                    "objects": 0.0723986267780601,
                    "old": 0.05859335279466677,
                    "oriented": 0.06390625759191627,
                    "paradigms": 0.1447972535561202,
                    "php": 0.05974981357340093,
                    "popular": 0.06976443641046373,
                    "probably": 0.055593369554885586,
                    "programming": 0.22043645687225358,
                    "python": 0.06100695801187457,
                    "related": 0.0656079923919484,
                    "relevant": 0.05974981357340093,
                    "runtime": 0.13952887282092746,
                    "say": 0.044702839350442725,
                    "seen": 0.05471746218750553,
                    "server": 0.06976443641046373,
                    "simple": 0.05974981357340093,
                    "sql": 0.0756226152290112,
                    "state": 0.0723986267780601,
                    "statically": 0.1512452304580224,
                    "step": 0.13952887282092746,
                    "strong": 0.06976443641046373,
                    "stuff": 0.05859335279466677,
                    "style": 0.06238400394099729,
                    "styles": 0.2092933092313912,
                    "sure": 0.05652582512244983,
                    "syntax": 0.13952887282092746,
                    "tell": 0.11949962714680186,
                    "time": 0.03884466053189527,
                    "try": 0.04914539265298338,
                    "typed": 0.20261178056687412,
                    "types": 0.19682397717584518,
                    "typing": 0.1350745203779161,
                    "useful": 0.05389163475485347,
                    "various": 0.0756226152290112,
                    "vs": 0.06753726018895805,
                    "want": 0.041997998246936924,
                    "web": 0.05389163475485347,
                    "worth": 0.055593369554885586,
                    "write": 0.04513415635626432,
                    "writing": 0.051664458533347786
                },
                "Max term": "language",
                "Max score": 0.36301924076469244
            }
        ]
    }
]