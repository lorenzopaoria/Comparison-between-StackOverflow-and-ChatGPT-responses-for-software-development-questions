[
    {
        "ID": "10998",
        "Question": "In a message to comp.emacs.xemacs, Jamie Zawinski once said:  Some people, when confronted with a problem, think \"I know, I'll use regular expressions.\" Now they have two problems.  I've always had trouble understanding what he was getting at. What does he mean by this? Update The answer that I'm looking for is one which explains what the 2nd problem is. Most answers below are that regexes are hard, which doesn't seem to fit the question. "
    },
    {
        "ID": "14461",
        "Question": "According SaaS maturity model a SaaS is level 2 if is configurable, but how i can get started in this concept?how patterns and Technics, i can use to enable my SaaS? "
    },
    {
        "ID": "16260",
        "Question": "Why did Microsoft not provide generic implementation of OrderedDictionary? There are a few custom implementations I've seen, including: http://www.codeproject.com/KB/recipes/GenericOrderedDictionary.aspx But why did Microsoft not include it in the base .net library? Surely they had a reason for not building a generic.... but what is it? Prior to posting this message, I did see:  https://stackoverflow.com/questions/2629027/no-generic-implementation-of-ordereddictionary But that just confirms that it does not exist. Not why it does not exist. Thanks "
    },
    {
        "ID": "20652",
        "Question": "I basically need some confirmation and clarification concerning Windows Azure with respect to a Silverlight application using RIA Services. In a normal Silverlight app that uses RIA services you have 2 projects:  App App.Web  ... where App is the default client-side Silverlight and app.web is the server-side code where your RIA services go. If you create a Windows Azure app and add a WCF Web Services Role, you get:  App (Azure project) App.Services (WCF Services project)  In App.Services, you add your RIA DomainService(s). You would then add another project to this solution that would be the client-side Silverlight that accesses the RIA Services in the App.Services project.  You then can add the entity model to the App.Services or another project that is referenced by App.Services (if that division is required for unit testing etc.) and connect that entity model to either a SQLServer db or a SQLAzure instance. Is this correct? If not, what is the general 'layout' for building an application with the following tiers:  UI (Silverlight 4) Services (RIA Services) Entity/Domain (EF 4) Data (SQL Server)  "
    },
    {
        "ID": "22158",
        "Question": "Roundup issue tracker is pretty minimalistic by default, and it does not bring any specific workflow with itself. It was once called ‘so configurable that it’s probably better described as a lightweight tracker-oriented framework.’ Have you ever used Roundup extensively or seen some interesting use cases? If so, please share an example. (If you don’t consider your workflow special enough, at least tell how do you understand & utilize superseder field in the default ‘classic’ template, which alone could be interpreted differently—see old.nabble.com/Superseder-td13792131.html) "
    },
    {
        "ID": "23506",
        "Question": "It is my first time writing an article on a software project. I am supposed to use ACM UbiComp paper format. I already have a structure that I should follow and there is a Background & Research Methods section after Abstract, Introduction, Related Work sections. I have browser through several articles, but some of them either dont have it, have only background section or have only research methods section. I am having hard time to find an article that has this section and moreover what I must write on here. My project is about Bluetooth location tracking and I do have the implementation and evaluation, so it is not something theoretical. "
    },
    {
        "ID": "23891",
        "Question": "Lately I have become interested in familiarizing myself with REST. I tried reading wiki entry on REST, but it was of no help. I would really appreciate it if someone can explain in simple English (that is without unnecessary tech jargon)  What is REST? What position it occupies in web architecture ecosystem? How tightly (or loosely) it is coupled with protocol? What are the alternatives to REST and how does REST compare with them?  I understand it may not be possible to answer this in one or two paragraphs, in that case relevant links will be highly appreciated. "
    },
    {
        "ID": "23915",
        "Question": "Is there a specific format for a feasibility study in SDLC? If so, do you know any sources where I can find more information about this? or can you show me at least an outline of what it should contain? "
    },
    {
        "ID": "24565",
        "Question": "Ours is a software concern and we have a team structured like so: manager->team leads->team members. We are following the agile programming model and trying to develop a product in a collaborative fashion. We have daily morning meetings with team members and their team leads to discuss progress and issues.  When it comes to TL->Manager, most of the time they do not have items to discuss on a daily basis since TL goals would be for weekly plan and such. Most of the time, we just discuss about resources and it is less technical. I just want suggestions on how the manager & team lead interaction should be and whether the current system we have is fine. Please share your thoughts or ideas. "
    },
    {
        "ID": "24583",
        "Question": "What is a situation while coding in C# where using pointers is a good or necessary option? I'm talking about unsafe pointers. "
    }
]